plugins {    
    id 'application'
}

configurations {
    docker
}

dependencies {
    implementation 'org.jooq:jooq:3.14.8'
    implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'
    implementation 'org.apache.tomcat:tomcat-jdbc:9.0.41'
    implementation 'io.javalin:javalin:3.13.4'
    implementation("io.javalin:javalin-openapi:3.12.0")
    implementation "io.swagger.core.v3:swagger-core:2.0.9"
    implementation "org.webjars:swagger-ui:3.24.3"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3'
    implementation "org.postgresql:postgresql:$PG_VERSION"    
    //compileOnly 'io.jsonwebtoken:jjwt-api:0.11.2'
    //runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',            
    //        'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation project(":housedb-dao")
    implementation project(":database")
    testImplementation 'junit:junit:4.11'
}

application {
    mainClass = "net.hobbyscience.housedb.api.Entry"
}

//task run(type: JavaExec, dependsOn: jar ){
    //classpath = files(tasks.jar)
    //classpath += configurations.compile.collect    
run {
    jvmArgs "-Djava.util.logging.ConsoleHandler.level=ALL"
    environment "HOUSEDB_URL",  project(":database").flyway.url
    environment "HOUSEDB_USERNAME", project(":database").flyway.user
    environment "HOUSEDB_PASSWORD", project(":database").flyway.password
}    

task prepareDockerBuild(type: Copy, dependsOn: jar ){
    doFirst {
        project.mkdir("$buildDir/docker")
    }

    from "src/main/docker"
    into "$buildDir/docker"

    from(configurations.docker)
    from( jar.outputs.files.singleFile )
}

task dockerBuild(type: Exec, dependsOn: prepareDockerBuild) {
    inputs.files configurations.docker.files

    workingDir "$buildDir/docker"
    executable "docker"
    args "build", "--tag=housedb-api:"+project.version, "."
}