/*
 * This file is generated by jOOQ.
 */
package housedb;


import housedb.tables.Catalog;
import housedb.tables.CatalogView;
import housedb.tables.FlywaySchemaHistory;
import housedb.tables.Intervals;
import housedb.tables.Locations;
import housedb.tables.Parameters;
import housedb.tables.RetrieveTimeseriesData;
import housedb.tables.Timeseries;
import housedb.tables.TimeseriesValues;
import housedb.tables.Types;
import housedb.tables.Zones;
import housedb.tables.records.RetrieveTimeseriesDataRecord;

import java.time.OffsetDateTime;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all tables in housedb
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>housedb.catalog</code>.
     */
    public static final Catalog CATALOG = Catalog.CATALOG;

    /**
     * The table <code>housedb.catalog_view</code>.
     */
    public static final CatalogView CATALOG_VIEW = CatalogView.CATALOG_VIEW;

    /**
     * The table <code>housedb.flyway_schema_history</code>.
     */
    public static final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>housedb.intervals</code>.
     */
    public static final Intervals INTERVALS = Intervals.INTERVALS;

    /**
     * The table <code>housedb.locations</code>.
     */
    public static final Locations LOCATIONS = Locations.LOCATIONS;

    /**
     * The table <code>housedb.parameters</code>.
     */
    public static final Parameters PARAMETERS = Parameters.PARAMETERS;

    /**
     * The table <code>housedb.retrieve_timeseries_data</code>.
     */
    public static final RetrieveTimeseriesData RETRIEVE_TIMESERIES_DATA = RetrieveTimeseriesData.RETRIEVE_TIMESERIES_DATA;

    /**
     * Call <code>housedb.retrieve_timeseries_data</code>.
     */
    public static Result<RetrieveTimeseriesDataRecord> RETRIEVE_TIMESERIES_DATA(Configuration configuration, String tsName, OffsetDateTime startTime, OffsetDateTime endTime, String timezone, Boolean excludeMissing) {
        return configuration.dsl().selectFrom(housedb.tables.RetrieveTimeseriesData.RETRIEVE_TIMESERIES_DATA.call(tsName, startTime, endTime, timezone, excludeMissing)).fetch();
    }

    /**
     * Get <code>housedb.retrieve_timeseries_data</code> as a table.
     */
    public static RetrieveTimeseriesData RETRIEVE_TIMESERIES_DATA(String tsName, OffsetDateTime startTime, OffsetDateTime endTime, String timezone, Boolean excludeMissing) {
        return housedb.tables.RetrieveTimeseriesData.RETRIEVE_TIMESERIES_DATA.call(tsName, startTime, endTime, timezone, excludeMissing);
    }

    /**
     * Get <code>housedb.retrieve_timeseries_data</code> as a table.
     */
    public static RetrieveTimeseriesData RETRIEVE_TIMESERIES_DATA(Field<String> tsName, Field<OffsetDateTime> startTime, Field<OffsetDateTime> endTime, Field<String> timezone, Field<Boolean> excludeMissing) {
        return housedb.tables.RetrieveTimeseriesData.RETRIEVE_TIMESERIES_DATA.call(tsName, startTime, endTime, timezone, excludeMissing);
    }

    /**
     * The table <code>housedb.timeseries</code>.
     */
    public static final Timeseries TIMESERIES = Timeseries.TIMESERIES;

    /**
     * The table <code>housedb.timeseries_values</code>.
     */
    public static final TimeseriesValues TIMESERIES_VALUES = TimeseriesValues.TIMESERIES_VALUES;

    /**
     * The table <code>housedb.types</code>.
     */
    public static final Types TYPES = Types.TYPES;

    /**
     * The table <code>housedb.zones</code>.
     */
    public static final Zones ZONES = Zones.ZONES;
}
