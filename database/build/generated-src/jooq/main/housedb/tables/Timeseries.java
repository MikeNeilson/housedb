/*
 * This file is generated by jOOQ.
 */
package housedb.tables;


import housedb.Housedb;
import housedb.Keys;
import housedb.tables.records.TimeseriesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Timeseries extends TableImpl<TimeseriesRecord> {

    private static final long serialVersionUID = -1726418061;

    /**
     * The reference instance of <code>housedb.timeseries</code>
     */
    public static final Timeseries TIMESERIES = new Timeseries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimeseriesRecord> getRecordType() {
        return TimeseriesRecord.class;
    }

    /**
     * The column <code>housedb.timeseries.id</code>.
     */
    public final TableField<TimeseriesRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('timeseries_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>housedb.timeseries.zone_id</code>.
     */
    public final TableField<TimeseriesRecord, Integer> ZONE_ID = createField(DSL.name("zone_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>housedb.timeseries.location_id</code>.
     */
    public final TableField<TimeseriesRecord, Integer> LOCATION_ID = createField(DSL.name("location_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>housedb.timeseries.parameter_id</code>.
     */
    public final TableField<TimeseriesRecord, Integer> PARAMETER_ID = createField(DSL.name("parameter_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>housedb.timeseries.type_id</code>.
     */
    public final TableField<TimeseriesRecord, Integer> TYPE_ID = createField(DSL.name("type_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>housedb.timeseries.interval_id</code>.
     */
    public final TableField<TimeseriesRecord, Integer> INTERVAL_ID = createField(DSL.name("interval_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>housedb.timeseries.duration_id</code>.
     */
    public final TableField<TimeseriesRecord, Integer> DURATION_ID = createField(DSL.name("duration_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>housedb.timeseries.version</code>.
     */
    public final TableField<TimeseriesRecord, String> VERSION = createField(DSL.name("version"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>housedb.timeseries</code> table reference
     */
    public Timeseries() {
        this(DSL.name("timeseries"), null);
    }

    /**
     * Create an aliased <code>housedb.timeseries</code> table reference
     */
    public Timeseries(String alias) {
        this(DSL.name(alias), TIMESERIES);
    }

    /**
     * Create an aliased <code>housedb.timeseries</code> table reference
     */
    public Timeseries(Name alias) {
        this(alias, TIMESERIES);
    }

    private Timeseries(Name alias, Table<TimeseriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Timeseries(Name alias, Table<TimeseriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Timeseries(Table<O> child, ForeignKey<O, TimeseriesRecord> key) {
        super(child, key, TIMESERIES);
    }

    @Override
    public Schema getSchema() {
        return Housedb.HOUSEDB;
    }

    @Override
    public Identity<TimeseriesRecord, Long> getIdentity() {
        return Keys.IDENTITY_TIMESERIES;
    }

    @Override
    public UniqueKey<TimeseriesRecord> getPrimaryKey() {
        return Keys.TIMESERIES_PKEY;
    }

    @Override
    public List<UniqueKey<TimeseriesRecord>> getKeys() {
        return Arrays.<UniqueKey<TimeseriesRecord>>asList(Keys.TIMESERIES_PKEY, Keys.TIMESERIES_ZONE_ID_LOCATION_ID_PARAMETER_ID_TYPE_ID_INTERVA_KEY);
    }

    @Override
    public List<ForeignKey<TimeseriesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TimeseriesRecord, ?>>asList(Keys.TIMESERIES__TIMESERIES_ZONE_ID_FKEY, Keys.TIMESERIES__TIMESERIES_LOCATION_ID_FKEY, Keys.TIMESERIES__TIMESERIES_PARAMETER_ID_FKEY, Keys.TIMESERIES__TIMESERIES_TYPE_ID_FKEY, Keys.TIMESERIES__TIMESERIES_INTERVAL_ID_FKEY, Keys.TIMESERIES__TIMESERIES_DURATION_ID_FKEY);
    }

    public Zones zones() {
        return new Zones(this, Keys.TIMESERIES__TIMESERIES_ZONE_ID_FKEY);
    }

    public Locations locations() {
        return new Locations(this, Keys.TIMESERIES__TIMESERIES_LOCATION_ID_FKEY);
    }

    public Parameters parameters() {
        return new Parameters(this, Keys.TIMESERIES__TIMESERIES_PARAMETER_ID_FKEY);
    }

    public Types types() {
        return new Types(this, Keys.TIMESERIES__TIMESERIES_TYPE_ID_FKEY);
    }

    public Intervals timeseriesIntervalIdFkey() {
        return new Intervals(this, Keys.TIMESERIES__TIMESERIES_INTERVAL_ID_FKEY);
    }

    public Intervals timeseriesDurationIdFkey() {
        return new Intervals(this, Keys.TIMESERIES__TIMESERIES_DURATION_ID_FKEY);
    }

    @Override
    public Timeseries as(String alias) {
        return new Timeseries(DSL.name(alias), this);
    }

    @Override
    public Timeseries as(Name alias) {
        return new Timeseries(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Timeseries rename(String name) {
        return new Timeseries(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Timeseries rename(Name name) {
        return new Timeseries(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Integer, Integer, Integer, Integer, Integer, Integer, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
