/*
 * This file is generated by jOOQ.
 */
package housedb.tables;


import housedb.Housedb;
import housedb.tables.records.RetrieveTimeseriesDataRecord;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row1;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RetrieveTimeseriesData extends TableImpl<RetrieveTimeseriesDataRecord> {

    private static final long serialVersionUID = -1523478153;

    /**
     * The reference instance of <code>housedb.retrieve_timeseries_data</code>
     */
    public static final RetrieveTimeseriesData RETRIEVE_TIMESERIES_DATA = new RetrieveTimeseriesData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RetrieveTimeseriesDataRecord> getRecordType() {
        return RetrieveTimeseriesDataRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<RetrieveTimeseriesDataRecord, Object> RETRIEVE_TIMESERIES_DATA_ = createField(DSL.name("retrieve_timeseries_data"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"data_triple\""), this, "");

    /**
     * Create a <code>housedb.retrieve_timeseries_data</code> table reference
     */
    public RetrieveTimeseriesData() {
        this(DSL.name("retrieve_timeseries_data"), null);
    }

    /**
     * Create an aliased <code>housedb.retrieve_timeseries_data</code> table reference
     */
    public RetrieveTimeseriesData(String alias) {
        this(DSL.name(alias), RETRIEVE_TIMESERIES_DATA);
    }

    /**
     * Create an aliased <code>housedb.retrieve_timeseries_data</code> table reference
     */
    public RetrieveTimeseriesData(Name alias) {
        this(alias, RETRIEVE_TIMESERIES_DATA);
    }

    private RetrieveTimeseriesData(Name alias, Table<RetrieveTimeseriesDataRecord> aliased) {
        this(alias, aliased, new Field[5]);
    }

    private RetrieveTimeseriesData(Name alias, Table<RetrieveTimeseriesDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    public <O extends Record> RetrieveTimeseriesData(Table<O> child, ForeignKey<O, RetrieveTimeseriesDataRecord> key) {
        super(child, key, RETRIEVE_TIMESERIES_DATA);
    }

    @Override
    public Schema getSchema() {
        return Housedb.HOUSEDB;
    }

    @Override
    public RetrieveTimeseriesData as(String alias) {
        return new RetrieveTimeseriesData(DSL.name(alias), this, parameters);
    }

    @Override
    public RetrieveTimeseriesData as(Name alias) {
        return new RetrieveTimeseriesData(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public RetrieveTimeseriesData rename(String name) {
        return new RetrieveTimeseriesData(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public RetrieveTimeseriesData rename(Name name) {
        return new RetrieveTimeseriesData(name, null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row1 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row1<Object> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public RetrieveTimeseriesData call(String tsName, OffsetDateTime startTime, OffsetDateTime endTime, String timezone, Boolean excludeMissing) {
        return new RetrieveTimeseriesData(DSL.name(getName()), null, new Field[] { 
              DSL.val(tsName, org.jooq.impl.SQLDataType.CLOB)
            , DSL.val(startTime, org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)
            , DSL.val(endTime, org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)
            , DSL.val(timezone, org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("'UTC'::text", org.jooq.impl.SQLDataType.CLOB)))
            , DSL.val(excludeMissing, org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)))
        });
    }

    /**
     * Call this table-valued function
     */
    public RetrieveTimeseriesData call(Field<String> tsName, Field<OffsetDateTime> startTime, Field<OffsetDateTime> endTime, Field<String> timezone, Field<Boolean> excludeMissing) {
        return new RetrieveTimeseriesData(DSL.name(getName()), null, new Field[] { 
              tsName
            , startTime
            , endTime
            , timezone
            , excludeMissing
        });
    }
}
