/*
 * This file is generated by jOOQ.
 */
package housedb.tables;


import housedb.Housedb;
import housedb.Keys;
import housedb.tables.records.TimeseriesValuesRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeseriesValues extends TableImpl<TimeseriesValuesRecord> {

    private static final long serialVersionUID = 1857658257;

    /**
     * The reference instance of <code>housedb.timeseries_values</code>
     */
    public static final TimeseriesValues TIMESERIES_VALUES = new TimeseriesValues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimeseriesValuesRecord> getRecordType() {
        return TimeseriesValuesRecord.class;
    }

    /**
     * The column <code>housedb.timeseries_values.timeseries_id</code>.
     */
    public final TableField<TimeseriesValuesRecord, Long> TIMESERIES_ID = createField(DSL.name("timeseries_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>housedb.timeseries_values.date_time</code>.
     */
    public final TableField<TimeseriesValuesRecord, OffsetDateTime> DATE_TIME = createField(DSL.name("date_time"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>housedb.timeseries_values.value</code>.
     */
    public final TableField<TimeseriesValuesRecord, Double> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>housedb.timeseries_values.quality</code>.
     */
    public final TableField<TimeseriesValuesRecord, Integer> QUALITY = createField(DSL.name("quality"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>housedb.timeseries_values</code> table reference
     */
    public TimeseriesValues() {
        this(DSL.name("timeseries_values"), null);
    }

    /**
     * Create an aliased <code>housedb.timeseries_values</code> table reference
     */
    public TimeseriesValues(String alias) {
        this(DSL.name(alias), TIMESERIES_VALUES);
    }

    /**
     * Create an aliased <code>housedb.timeseries_values</code> table reference
     */
    public TimeseriesValues(Name alias) {
        this(alias, TIMESERIES_VALUES);
    }

    private TimeseriesValues(Name alias, Table<TimeseriesValuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TimeseriesValues(Name alias, Table<TimeseriesValuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TimeseriesValues(Table<O> child, ForeignKey<O, TimeseriesValuesRecord> key) {
        super(child, key, TIMESERIES_VALUES);
    }

    @Override
    public Schema getSchema() {
        return Housedb.HOUSEDB;
    }

    @Override
    public UniqueKey<TimeseriesValuesRecord> getPrimaryKey() {
        return Keys.TIMESERIES_VALUES_PKEY;
    }

    @Override
    public List<UniqueKey<TimeseriesValuesRecord>> getKeys() {
        return Arrays.<UniqueKey<TimeseriesValuesRecord>>asList(Keys.TIMESERIES_VALUES_PKEY);
    }

    @Override
    public List<ForeignKey<TimeseriesValuesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TimeseriesValuesRecord, ?>>asList(Keys.TIMESERIES_VALUES__TIMESERIES_VALUES_TIMESERIES_ID_FKEY);
    }

    public Timeseries timeseries() {
        return new Timeseries(this, Keys.TIMESERIES_VALUES__TIMESERIES_VALUES_TIMESERIES_ID_FKEY);
    }

    @Override
    public TimeseriesValues as(String alias) {
        return new TimeseriesValues(DSL.name(alias), this);
    }

    @Override
    public TimeseriesValues as(Name alias) {
        return new TimeseriesValues(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeseriesValues rename(String name) {
        return new TimeseriesValues(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeseriesValues rename(Name name) {
        return new TimeseriesValues(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, OffsetDateTime, Double, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
