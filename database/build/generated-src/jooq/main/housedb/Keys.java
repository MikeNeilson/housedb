/*
 * This file is generated by jOOQ.
 */
package housedb;


import housedb.tables.FlywaySchemaHistory;
import housedb.tables.Intervals;
import housedb.tables.Locations;
import housedb.tables.Parameters;
import housedb.tables.Timeseries;
import housedb.tables.TimeseriesValues;
import housedb.tables.Types;
import housedb.tables.Zones;
import housedb.tables.records.FlywaySchemaHistoryRecord;
import housedb.tables.records.IntervalsRecord;
import housedb.tables.records.LocationsRecord;
import housedb.tables.records.ParametersRecord;
import housedb.tables.records.TimeseriesRecord;
import housedb.tables.records.TimeseriesValuesRecord;
import housedb.tables.records.TypesRecord;
import housedb.tables.records.ZonesRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>housedb</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<IntervalsRecord, Long> IDENTITY_INTERVALS = Identities0.IDENTITY_INTERVALS;
    public static final Identity<LocationsRecord, Long> IDENTITY_LOCATIONS = Identities0.IDENTITY_LOCATIONS;
    public static final Identity<ParametersRecord, Long> IDENTITY_PARAMETERS = Identities0.IDENTITY_PARAMETERS;
    public static final Identity<TimeseriesRecord, Long> IDENTITY_TIMESERIES = Identities0.IDENTITY_TIMESERIES;
    public static final Identity<TypesRecord, Long> IDENTITY_TYPES = Identities0.IDENTITY_TYPES;
    public static final Identity<ZonesRecord, Long> IDENTITY_ZONES = Identities0.IDENTITY_ZONES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<IntervalsRecord> INTERVALS_PKEY = UniqueKeys0.INTERVALS_PKEY;
    public static final UniqueKey<LocationsRecord> LOCATIONS_PKEY = UniqueKeys0.LOCATIONS_PKEY;
    public static final UniqueKey<ParametersRecord> PARAMETERS_PKEY = UniqueKeys0.PARAMETERS_PKEY;
    public static final UniqueKey<TimeseriesRecord> TIMESERIES_PKEY = UniqueKeys0.TIMESERIES_PKEY;
    public static final UniqueKey<TimeseriesRecord> TIMESERIES_ZONE_ID_LOCATION_ID_PARAMETER_ID_TYPE_ID_INTERVA_KEY = UniqueKeys0.TIMESERIES_ZONE_ID_LOCATION_ID_PARAMETER_ID_TYPE_ID_INTERVA_KEY;
    public static final UniqueKey<TimeseriesValuesRecord> TIMESERIES_VALUES_PKEY = UniqueKeys0.TIMESERIES_VALUES_PKEY;
    public static final UniqueKey<TypesRecord> TYPES_PKEY = UniqueKeys0.TYPES_PKEY;
    public static final UniqueKey<ZonesRecord> ZONES_PKEY = UniqueKeys0.ZONES_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LocationsRecord, LocationsRecord> LOCATIONS__LOCATIONS_PARENT_ID_FKEY = ForeignKeys0.LOCATIONS__LOCATIONS_PARENT_ID_FKEY;
    public static final ForeignKey<TimeseriesRecord, ZonesRecord> TIMESERIES__TIMESERIES_ZONE_ID_FKEY = ForeignKeys0.TIMESERIES__TIMESERIES_ZONE_ID_FKEY;
    public static final ForeignKey<TimeseriesRecord, LocationsRecord> TIMESERIES__TIMESERIES_LOCATION_ID_FKEY = ForeignKeys0.TIMESERIES__TIMESERIES_LOCATION_ID_FKEY;
    public static final ForeignKey<TimeseriesRecord, ParametersRecord> TIMESERIES__TIMESERIES_PARAMETER_ID_FKEY = ForeignKeys0.TIMESERIES__TIMESERIES_PARAMETER_ID_FKEY;
    public static final ForeignKey<TimeseriesRecord, TypesRecord> TIMESERIES__TIMESERIES_TYPE_ID_FKEY = ForeignKeys0.TIMESERIES__TIMESERIES_TYPE_ID_FKEY;
    public static final ForeignKey<TimeseriesRecord, IntervalsRecord> TIMESERIES__TIMESERIES_INTERVAL_ID_FKEY = ForeignKeys0.TIMESERIES__TIMESERIES_INTERVAL_ID_FKEY;
    public static final ForeignKey<TimeseriesRecord, IntervalsRecord> TIMESERIES__TIMESERIES_DURATION_ID_FKEY = ForeignKeys0.TIMESERIES__TIMESERIES_DURATION_ID_FKEY;
    public static final ForeignKey<TimeseriesValuesRecord, TimeseriesRecord> TIMESERIES_VALUES__TIMESERIES_VALUES_TIMESERIES_ID_FKEY = ForeignKeys0.TIMESERIES_VALUES__TIMESERIES_VALUES_TIMESERIES_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<IntervalsRecord, Long> IDENTITY_INTERVALS = Internal.createIdentity(Intervals.INTERVALS, Intervals.INTERVALS.ID);
        public static Identity<LocationsRecord, Long> IDENTITY_LOCATIONS = Internal.createIdentity(Locations.LOCATIONS, Locations.LOCATIONS.ID);
        public static Identity<ParametersRecord, Long> IDENTITY_PARAMETERS = Internal.createIdentity(Parameters.PARAMETERS, Parameters.PARAMETERS.ID);
        public static Identity<TimeseriesRecord, Long> IDENTITY_TIMESERIES = Internal.createIdentity(Timeseries.TIMESERIES, Timeseries.TIMESERIES.ID);
        public static Identity<TypesRecord, Long> IDENTITY_TYPES = Internal.createIdentity(Types.TYPES, Types.TYPES.ID);
        public static Identity<ZonesRecord, Long> IDENTITY_ZONES = Internal.createIdentity(Zones.ZONES, Zones.ZONES.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
        public static final UniqueKey<IntervalsRecord> INTERVALS_PKEY = Internal.createUniqueKey(Intervals.INTERVALS, "intervals_pkey", new TableField[] { Intervals.INTERVALS.ID }, true);
        public static final UniqueKey<LocationsRecord> LOCATIONS_PKEY = Internal.createUniqueKey(Locations.LOCATIONS, "locations_pkey", new TableField[] { Locations.LOCATIONS.ID }, true);
        public static final UniqueKey<ParametersRecord> PARAMETERS_PKEY = Internal.createUniqueKey(Parameters.PARAMETERS, "parameters_pkey", new TableField[] { Parameters.PARAMETERS.ID }, true);
        public static final UniqueKey<TimeseriesRecord> TIMESERIES_PKEY = Internal.createUniqueKey(Timeseries.TIMESERIES, "timeseries_pkey", new TableField[] { Timeseries.TIMESERIES.ID }, true);
        public static final UniqueKey<TimeseriesRecord> TIMESERIES_ZONE_ID_LOCATION_ID_PARAMETER_ID_TYPE_ID_INTERVA_KEY = Internal.createUniqueKey(Timeseries.TIMESERIES, "timeseries_zone_id_location_id_parameter_id_type_id_interva_key", new TableField[] { Timeseries.TIMESERIES.ZONE_ID, Timeseries.TIMESERIES.LOCATION_ID, Timeseries.TIMESERIES.PARAMETER_ID, Timeseries.TIMESERIES.TYPE_ID, Timeseries.TIMESERIES.INTERVAL_ID, Timeseries.TIMESERIES.DURATION_ID, Timeseries.TIMESERIES.VERSION }, true);
        public static final UniqueKey<TimeseriesValuesRecord> TIMESERIES_VALUES_PKEY = Internal.createUniqueKey(TimeseriesValues.TIMESERIES_VALUES, "timeseries_values_pkey", new TableField[] { TimeseriesValues.TIMESERIES_VALUES.TIMESERIES_ID, TimeseriesValues.TIMESERIES_VALUES.DATE_TIME }, true);
        public static final UniqueKey<TypesRecord> TYPES_PKEY = Internal.createUniqueKey(Types.TYPES, "types_pkey", new TableField[] { Types.TYPES.ID }, true);
        public static final UniqueKey<ZonesRecord> ZONES_PKEY = Internal.createUniqueKey(Zones.ZONES, "zones_pkey", new TableField[] { Zones.ZONES.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<LocationsRecord, LocationsRecord> LOCATIONS__LOCATIONS_PARENT_ID_FKEY = Internal.createForeignKey(Keys.LOCATIONS_PKEY, Locations.LOCATIONS, "locations_parent_id_fkey", new TableField[] { Locations.LOCATIONS.PARENT_ID }, true);
        public static final ForeignKey<TimeseriesRecord, ZonesRecord> TIMESERIES__TIMESERIES_ZONE_ID_FKEY = Internal.createForeignKey(Keys.ZONES_PKEY, Timeseries.TIMESERIES, "timeseries_zone_id_fkey", new TableField[] { Timeseries.TIMESERIES.ZONE_ID }, true);
        public static final ForeignKey<TimeseriesRecord, LocationsRecord> TIMESERIES__TIMESERIES_LOCATION_ID_FKEY = Internal.createForeignKey(Keys.LOCATIONS_PKEY, Timeseries.TIMESERIES, "timeseries_location_id_fkey", new TableField[] { Timeseries.TIMESERIES.LOCATION_ID }, true);
        public static final ForeignKey<TimeseriesRecord, ParametersRecord> TIMESERIES__TIMESERIES_PARAMETER_ID_FKEY = Internal.createForeignKey(Keys.PARAMETERS_PKEY, Timeseries.TIMESERIES, "timeseries_parameter_id_fkey", new TableField[] { Timeseries.TIMESERIES.PARAMETER_ID }, true);
        public static final ForeignKey<TimeseriesRecord, TypesRecord> TIMESERIES__TIMESERIES_TYPE_ID_FKEY = Internal.createForeignKey(Keys.TYPES_PKEY, Timeseries.TIMESERIES, "timeseries_type_id_fkey", new TableField[] { Timeseries.TIMESERIES.TYPE_ID }, true);
        public static final ForeignKey<TimeseriesRecord, IntervalsRecord> TIMESERIES__TIMESERIES_INTERVAL_ID_FKEY = Internal.createForeignKey(Keys.INTERVALS_PKEY, Timeseries.TIMESERIES, "timeseries_interval_id_fkey", new TableField[] { Timeseries.TIMESERIES.INTERVAL_ID }, true);
        public static final ForeignKey<TimeseriesRecord, IntervalsRecord> TIMESERIES__TIMESERIES_DURATION_ID_FKEY = Internal.createForeignKey(Keys.INTERVALS_PKEY, Timeseries.TIMESERIES, "timeseries_duration_id_fkey", new TableField[] { Timeseries.TIMESERIES.DURATION_ID }, true);
        public static final ForeignKey<TimeseriesValuesRecord, TimeseriesRecord> TIMESERIES_VALUES__TIMESERIES_VALUES_TIMESERIES_ID_FKEY = Internal.createForeignKey(Keys.TIMESERIES_PKEY, TimeseriesValues.TIMESERIES_VALUES, "timeseries_values_timeseries_id_fkey", new TableField[] { TimeseriesValues.TIMESERIES_VALUES.TIMESERIES_ID }, true);
    }
}
